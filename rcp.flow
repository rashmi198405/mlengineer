{"metadata": {"version": 1, "disable_limits": false, "instance_type": "ml.m5.4xlarge", "disable_validation": true}, "parameters": [], "nodes": [{"node_id": "6672097b-7166-48eb-9bf2-89a8528bf6ce", "type": "SOURCE", "operator": "sagemaker.s3_source_0.1", "parameters": {"dataset_definition": {"datasetSourceType": "Local File Upload", "name": "data.csv", "description": null, "s3ExecutionContext": {"s3Uri": "s3://sagemaker-us-east-1-269031123124/Canvas/default-1751246082575/uploads/data.csv", "s3ContentType": "csv", "s3HasHeader": true, "s3FieldDelimiter": ",", "s3DirIncludesNested": false, "s3AddsFilenameColumn": false, "s3RoleArn": null, "s3CsvEncodingType": "UTF_8", "s3SkipLines": 0, "s3MultiLine": false, "s3DataType": "S3Prefix", "s3ManifestPlain": {"s3Uris": null}}, "canvasDatasetMetadata": null}}, "inputs": [], "outputs": [{"name": "default", "sampling": {"sampling_method": "sample_by_count", "sample_size": 50000}}]}, {"node_id": "e1da6d3d-e226-4533-8309-38291a6b499a", "type": "TRANSFORM", "operator": "sagemaker.spark.infer_and_cast_type_0.1", "parameters": {}, "trained_parameters": {"schema": {"custid": "string", "retained": "long", "created": "datetime", "firstorder": "datetime", "lastorder": "datetime", "esent": "long", "eopenrate": "float", "eclickrate": "float", "avgorder": "float", "ordfreq": "float", "paperless": "long", "refill": "long", "doorstep": "long", "favday": "string", "city": "string"}}, "inputs": [{"name": "default", "node_id": "6672097b-7166-48eb-9bf2-89a8528bf6ce", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "cef036d7-e0af-4f56-911d-14b2791b9f84", "type": "TRANSFORM", "operator": "sagemaker.spark.handle_missing_0.1", "parameters": {"operator": "Drop missing", "drop_missing_parameters": {"input_column": ["custid", "retained", "created", "firstorder", "lastorder", "esent", "eopenrate", "eclickrate", "avgorder", "ordfreq", "paperless", "refill", "doorstep", "favday", "city"]}, "impute_parameters": {"column_type": "Numeric", "numeric_parameters": {"strategy": "Approximate Median"}}}, "inputs": [{"name": "df", "node_id": "e1da6d3d-e226-4533-8309-38291a6b499a", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "fbcc8069-a9b4-4d3b-b7f9-d78f76694355", "type": "TRANSFORM", "operator": "sagemaker.spark.cast_single_data_type_0.1", "parameters": {"column": "created", "original_data_type": "Datetime", "data_type": "date"}, "inputs": [{"name": "df", "node_id": "cef036d7-e0af-4f56-911d-14b2791b9f84", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "5756ba44-0c77-4e1a-bc84-3369d952a12c", "type": "TRANSFORM", "operator": "sagemaker.spark.cast_single_data_type_0.1", "parameters": {"column": "firstorder", "original_data_type": "Datetime", "data_type": "date"}, "inputs": [{"name": "df", "node_id": "fbcc8069-a9b4-4d3b-b7f9-d78f76694355", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "786856fd-1718-4b13-8d08-184fc3c8dfec", "type": "TRANSFORM", "operator": "sagemaker.spark.cast_single_data_type_0.1", "parameters": {"column": "lastorder", "original_data_type": "Datetime", "data_type": "datetime"}, "inputs": [{"name": "df", "node_id": "5756ba44-0c77-4e1a-bc84-3369d952a12c", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "65a18e42-4e01-42b3-a976-fc5154237b8a", "type": "TRANSFORM", "operator": "sagemaker.spark.encode_categorical_0.1", "parameters": {"operator": "One-hot encode", "one_hot_encode_parameters": {"input_column": ["city", "favday"], "invalid_handling_strategy": "Error", "drop_last": false, "output_style": "Columns"}, "ordinal_encode_parameters": {"invalid_handling_strategy": "Replace with NaN"}}, "trained_parameters": {"one_hot_encode_parameters": [{"_hash": "b2a138cad44b0e2e9dee488596f6ac7cfb70086e", "string_indexer_model": "P)h>@6aWAK2msGj;#!*b;*Q$@003hF000vJ003=ebYWy+bYU-WVRCdWFfcGMFpZB*OT;h`hVTB2oV%gjwz|95^|FUWLGfC~WV##7my<-SOaHq=1wldZ7M{G%J2MxdETklMBG5@f1a(H4BG8L;R*nd{5Xy&4#-9#e<2%wZXtbgd**HuYTok+Jrf<5wZMMz2T~}i9pOBIXo|{|Q$$ACu!>?-giqQ;zR1VnJo99knZ}b*9!aleoaPvi+!E1{L{|0sukth&njE^PngJq;lo|uG^zfndP2gT315*kM+HsAlFG%Z`*kw$u)BJ$5j_*&4b=@ygvHRSIbhT$tG=K1OqP)h>@6aWAK2msGj;#xaJh#3w5000aC000;O003=ebYWy+bYU+paA9(EEif=JFfcA-a$`#_N@ieSU}ETd^nDfpP)h>@6aWAK2msGj;#zL|H#E-y006fF002k;003lRbYU-WVRCdWFfcGMFfB7NWivK2W;HE1VKibbG-EL^Ejc$ZH7zn>HDxhnVmDziWHl{gFfcGKb8ca9aCt6pVRCVGWps^_(P|Sx6ozLuF<EFp1ZSCny$A~lt;S)p+q7%wg((%Jq*_W5K}2RZle##&Nq06%DY+@V>Kh0?fDhn1^a%tX$FoVQ6&1YNbN>H7d-j{z!@*IPAo7wNlkcCueX6>|hPFm(2t9Nw2%*XsRK;~WT|@Y;z5C(-*PrY?9hT0)U{F4Ghezz5#b~80Xa!VaF$W>$IySk$P$3ZXvxb?<{QX-Kzf-9s7V24aP0L7WGsts!Ml4br?m)O#rB$7nVi~C`tx}a0f3r!W^()XqLl<nvVlH#rwo4kUg=*~8?H!B3n}OdNVmY>RiJc4Fws*GBdWo?h0t`40Ab?kY#l&&0FnNH=sMWS1ejh+Pluq&!E~gUM_yUuEP`ODa8NCzmO)e1K_#<IXHHYGKrV5@<KJru*awH2$ukpE8oK2P2_e_z`;==2A<3#C^@%pdNy-cR1bqfppW&Y=!T*)iC<Nt8WT}gHVay-cjnPleqOlz+XU!dmy5Ho0Gq}5XBcsB^JYd(K7M|6J$_$bYrs}pH<dDrJbb3K|Rdeju6E5_Sl5D7mVZHCb}@Owh}vD_XD6^6bFL@c)C;|=DP*Sin*a0tKb4^T@31QY-O00;ojRpMGGpisgR0000G0000@0001FVRT_HE^uLTbS*G2FfcGJGcjc|HZx{5EjVE`Vl6adF)%GTH!w9VGGR4kF=b*mVKHPiEn_e+FfMa$VQ_GHE^uLTadl;ME@N_IOD;-gU|?Wkc&WGkqQLS8YyeP80Rj{Q6aWAK2msGj;#!*b;*Q$@003hF000vJ0000000000005+c00000ZDn*}WMOn+FK}UUbS*G2FfcGsO928D0~7!N00;ojRpMGZMTi*=0000C0000O00000000000001_feZlv0BvP-VPs)+VJ|LlVRCdWFfcGMFfL<qV^B*00u%!j000080MAw8T5kI{G|vG50Jj1F07w7;00000000000HlFX0RRAGVRT_HaA9(EEif=JFfc7MF=aD0GiEg{IAJtmEi_{>FfBPZFf}bQVKrqjWnwpBF=RC@V=yo<E^}^SaBz7paA9(Bb!Bu=O928D0~7!N00;ojRpMGGpisgR0000G0000@00000000000001_frSGA0AyiwVJ|LlVRCdWFfcGMFfB7NWivK2W;HE1VKibbG-EL^Ejc$ZH7zn>HDxhnVmDziWHl{gFfcGKb8ca9aCt6pVRCVGWpplMa$`_S1qJ{B000C41ORve0006600000", "one_hot_encoder_model": "P)h>@6aWAK2msGj;#!e87`fH}003zL000vJ003=ebYWy+bYU-WVRCdWFfcGMFm;YSZvrt4hWGxA%n;piL5N!`q#_lyQ`g8`eC5=9$#FUq-G8r3)d~g{50Cx4ug_}mP>SkRqIV4$h7;<Nfj)HbdPLw#s9z#JCEmp$Ii!OOuNI1@fQ2Ds)wi2<Yt~)6ZOy7%sEhxGRHhUqxzk2BO9)?a*@#ysC-5fHIs?aM*t+A!7&#Fi!T}`ttWxD%`7wEsEMv%aNZ$SgP4R#6$Az9CI*<GK3I0-qM2UnuO8FTIt9}Gua2A3iRL`$hW%uOkC+>f4?eE=98&k!3e)tAZO9KQH000080MAw8T5V8_4h{eS01N;C02lxO0BvP-VPs)+VJ|LlVRCdWFfcGMFfL<qV@obdW?*1oV%RBRIS~L*O9KQH000080MAw8T1<EqyrlsE08Ih_07w7;0AyiwVJ~oDa&#>)FfcGMEipJbVKg#hGA(6eG%zhRIW#yeI5}cuEnzk`VrFAxWi&N1G%aH=FfcB2Zeeh6c`k5aa&dKKbY)V}YTGarRkSP(bbBaNLIytsK|>3fQ0%64Lm$?+Qc4M1-nKCmNA65zJC&4;wB&vC3;GlLp1$uR_T1Yz9V^2i>D+sc?m5DvlMj7@2q#_g@ay-_&5&S#Ez&}0>peyYy@C%`jGC|oTR33N)v4YH4k&<-w#k^*`26&Zn<;zs)urEbp$J9;%-*KT>&wb6KIS*t!Hm}VG0+E1)-<{EKq7btu?=l>p-Yb_4#FVpw!u!YgIYoI@`9D<nM^RnbVSG9_Hk{hUMbrB2Z2Y(1yi7L*C5;UGZ6?>xZ9@VZD{uxtL&vvGX=KADuMW}t;?&Dy^h7ckcjR5$8gt1z~OqXy|C2}QE0EG$}4u?xaEE^(|pLCxAWBV9?x=Zrj8Fk-SScuPpucBfKe;{DwVZr0p)ejab3+z5NQkbv?{&IOLs9hh7U7koL=^L2}n&0P+_p{@n=tP@pAcPiP+iN@w>uy))6~>(T_yj*`3UDGwn#(m)T(wPh^x#_mfE$M+2#&R2^ngCrPAZnaTrov=@XSyzQR`LL>N*9sy8G0|XQR000O8&sE}D{_87V5&!@I5C8xGO#lD@WMOn+FD`Ila&#>)FfcGMEipJbVKg#hGA(6eG%zhRIW#yeI5}cuEnzk`VrFAxWi&N1G%aH=FfcB2Zeeh6c`k5aa&dKKbS`6ZV@obdW?*1oVlY~3;vqey-v$6sO928D0~7!N00;ojRpMHaIT*Rt0001K0RR9K00000000000001_fdBvi0BvP-VPs)+VJ~oDa&#>)FfcGMP)h*<6ay3h000O8&sE}DZBUF34gdfE3;+NC7ytkO0000000000q=5$k003=ebYWy+bYU+paA9(EEif=JFfcA-a$`_S0Rj{Q6aWAK2msGj;#y326}+VZ002z_002k;0000000000005+cO921?WMOn+FK}UUbS*G2FfcGJF*rG4G%{l{EoEagFfBAWG&n6dIbvijVKz2mW@BV!G&M3bEn_e+FfMa$VQ_GHE^uLTadl;MP)h*<6ay3h000O8&sE}D{_87V5&!@I5C8xGO#lD@0000000000q=8lg003lRbYU+paA9(EEif=JFfc7KI5}Z7GGj6=Wn(ljEi^eaI4w9iVq`60Ha22rV`ODCH8M0UV=yo<E^}^SaBz7paA9(Bb!BueV{&6qO9ci10000400aPd0RRBg0{{R300", "input_column": "city"}, {"_hash": "b2a138cad44b0e2e9dee488596f6ac7cfb70086e", "string_indexer_model": "P)h>@6aWAK2msMl;#!hX3@zCJ003nH000vJ003=ebYWy+bYU-WVRCdWFfcGMFnx|qPs1<}MDP5JJ*QTaG@|JhE<IErfw)F1d(&F@i?v-5s{D7{AR%!m*U`K;a{*~EM%aPpqriajL?Q;{cVUef2~%bgFNw7~?wz7f;)7RYpn{|=#e_D%uD<W;P1n|a+xJZc3;#wOwRgqbij7#W(0;kqx^P*m68=#R+g^1IVk>FeluF^z9<Z1%;ByK&J$O@~L^cf4U)N9Ql%c&lqgi~!?78IH{kBIuE1Y1iK+%ZVq~{yj+h2y^r}xibT;L~G#IIAJ>n_trCMTyyiW27e?i)}`0|XQR000O8(N*GFC!MSl4gdfE3;+NC7ytkOZDn*}WMOn+FD`Ila&#>)FfcGME@N_IOD;-gU|?Wk(B%o71OQM=0|XQR000O8(N*GFy58>u?g0P*_yPa`NB{r;WMOn+FK}UUbS*G2FfcGJW@TeGI5S~oEiz^|W-T-}H#IF{VK!tfW@2JtVPr95VPs`xEn_e+FfMa$VQ_GHE^uLTadl;Mjgn1k)Ib==XVPsp#ibxPVFq$oBD=J*hHTPp<Fc26h)9*<78JC|Y%<%1PLk~;QA*iQqX$p@06ls0LwM=ILl1rkpX`gRsNn6H|4W|yCfVP8*(HcvVse4Wm+#jfu|?KF(20)Fp|ye#TKW8-hU;&WZzf3Sd6q`}tPaybDRLMwp-)r{gMo>0Tq<l@Yv8^TQM!5`v&TbTlnU&sJS?j+yQ?v(&r6K1Rms_th{jBWm}MH|3d4jzkWU-=gsYQxd3Y=mPBhfh=pD&NLgu?lRVAYD4ItdB(VC3&VjigrDH4$uf3r!WbrWczJqv78V-~a8hD92zg>?4%_KsO`S@`WhG;`hjfz2!2HU`^h;|6942t06|fC4){X~Z<IF&Ut$qqPm_-2>tdrI|W%_=E$bGvjsM3zf%NN>_bn%W)Ci{3DT{N(YA1QWTELJ~)Xec*F}%zv6SdIGYH&Z|8+7!@};^<5<WjxBG9-?UW~#b&C)DdHz?AFXRR0!GE~bt~fmcIn2_6$7%kel+y0Q8;I#Y#1syEB*k3l*h>W1HJu(#5q-7*e3+=_;zpWXr|UU>b7NG-GHSYR*B$Q!{>b%$Xe$_veXr*VFXTI8R|J74d^dEr`J+u{Ro{6C-(esA`JYfr0|XQR000O8(N*GFKShr(5&!@I5C8xGO#lD@WMOn+FD`Ila&#>)FfcGMEoNn7HaIh3Wi2vhH)bs~Ha9gbVqrF9EoNe3VPRx3V_{@vWi4YcFfcB2Zeeh6c`k5aa&dKKbS`6ZV@obdW?*1oVqiW0Fz}7~r!)XiO928D0~7!N00;olRpMHbQ4B5F0001G0RR9K00000000000001_fdBvi0BvP-VPs)+VJ~oDa&#>)FfcGMP)h*<6ay3h000O8(N*GFC!MSl4gdfE3;+NC7ytkO0000000000q=5<n003=ebYWy+bYU+paA9(EEif=JFfcA-a$`_S0Rj{Q6aWAK2msMl;##`i?*#4v008&`002k;0000000000005+cP5}S_WMOn+FK}UUbS*G2FfcGJW@TeGI5S~oEiz^|W-T-}H#IF{VK!tfW@2JtVPr95VPs`xEn_e+FfMa$VQ_GHE^uLTadl;MP)h*<6ay3h000O8(N*GFKShr(5&!@I5C8xGO#lD@0000000000q=BLX003lRbYU+paA9(EEif=JFfc7<Wn(rtGht;dGG;esEi^VaH7#OcHe@YkVq#%oWHDo5WMyS7V=yo<E^}^SaBz7paA9(Bb!BueV{&6qO9ci10000400aPd0RR9W1ONa400", "one_hot_encoder_model": "P)h>@6aWAK2msMl;#za>={wZ`003zL000vJ003=ebYWy+bYU-WVRCdWFfcGMFpZB*O9Md+hVTB2oVUY{yH&ea5n8b5$?FhzvhCu0k;!<l?0<KxC<qE(a(I*HdC3VzhdILlkq-(Jjz>~CA-^c^)I=zSNj(JGM!5@Pw8Z;595f)ar!43b4ElPl`*o)`z3y)sIP*`$d5)o)JJqXph5jw9+RByL*6@eYJhz(0c4KvSc~ws;kA9EUd;-fc-D4IQCUlt^IAXAlcHtG>*+k5dD-?^QBDc}i%n12p#^}sP;~c&hUpXudSemdndHl6Zxcsy0?@x^Ryn|)Acn45R0|XQR000O8(N*GF_tv~*4gdfE3;+NC7ytkOZDn*}WMOn+FD`Ila&#>)FfcGME@N_IOD;-gU|?WkuzvZz7ywX90|XQR000O8(N*GF2V*VuqyYc`O#%P_NB{r;WMOn+FK}UUbS*G2FfcGJVPZBjWj16nEnzr0WGyr>VKXf_HezHgGBGtaH)Sw2V=_26En_e+FfMa$VQ_GHE^uLTadl;MWl}+F+b|eav@A_wI}|D*gAYN_&_X5@yII}P!+I;Fl(6Ntm7zFtXC~XJq->-me_*}!w0nQh{>{$)8mFUW7$m*#dr#kc!lUDleS!!lU2=Q(=YBIJ7+{OE5Zd~H5kjxvgB7C<*n%w_u;%JiZv+PvKuFtUOly30^2W`S{r=UZ-*lk}Mgz>=rpoKf$}T?T*V@61*4Yuz2Tj&Ax${6Gcn7f!ZFHeak0=hpAndlmPOyVoLGto~mFS5~FvWC4$KCc(ZK_@=+I@z=Bjkc9(D>CL+w=<&2voS+rsHjB_ZX|}rBE{kw#6!e_@S-KtCGEr#lDb;?fu7aS4P0$YOcMo)lX4qucpc?_PcSz{bHv1kUMYZspmbO<=RXgAAY{!r79j<FG2yMR{T>cYt;hE>!9PhnwKEb7V2qLdX<;%d~OUMX399d?C}zini!zMVBO<Sp5Wr;@?weD>DuwT!gkgXJAKiQMBLe(%yTpCNZFU!K@v}7luY-NNft)~siRaKWKt(dq+^-N_v&yj2t#<=zYT;&@FP6{P)h>@6aWAK2msMl;##DbmtYbA000mG002z@003lRbYU+paA9(EEif=JFfc7)Vm32nHe@j^VK_NtEi^D;Gc7naVq`5cF*P<fWiT~kGB`LbV=yo<E^}^SaBz7paA9(Bb!BueV{&6lE=p!#U|?dHCa_dYdP=_y08mQ-0u%!j000080MS+AT66E|JJkRH0BHdL022TJ00000000000HlEc0001OWprU=VRT_HaA9(EEif=JFfdR{0Rj{Q6aWAK2msMl;#&9Cykrgl000aC000;O0000000000005+c1_1y7ZDn*}WMOn+FD`Ila&#>)FfcGME@N_IP)h*<6ay3h000O8(N*GF2V*VuqyYc`O#%P_NB{r;0000000000q=8BS003lRbYU-WVRCdWFfcGMFfCzXHZx^5WHBvaI5}i3G%#T^EjTt}WGyl=H8wY8Fg0T`I5;h1FfcGKb8ca9aCt6pVRCVGWpq$W0Rj{Q6aWAK2msMl;##DbmtYbA000mG002z@0000000000005+cR09A2WMOn+FD`Ila&#>)FfcGMEn#9dGi5epF)d*@Ib<y~Fkv$-I5uKrEiy4RHaBH3HDfY3I4xr^FfcB2Zeeh6c`k5aa&dKKbS`6ZV^B*41^@s600aO80C)ia0MP>g0000", "input_column": "favday"}]}, "inputs": [{"name": "df", "node_id": "786856fd-1718-4b13-8d08-184fc3c8dfec", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "26eb7ddc-2c6e-434a-be6c-ad8c2cedf40c", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_code_0.1", "parameters": {"operator": "Python (PySpark)", "pyspark_parameters": {"code": "# Table is available as variable `df`\n# Table is available as variable `df`\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.types import *\n\n# If you need to specify the exact timestamp format for filtering\nfilter_timestamp = F.to_timestamp(F.lit('1904-01-01'), 'yyyy-MM-dd')\n\n# Your existing filtering logic\ndf = df.filter(F.col('firstorder') != F.to_date(F.lit('1904-01-01'), 'yyyy-MM-dd'))\ndf = df.filter(F.col('lastorder') != filter_timestamp)\n\n# Convert lastorder to Unix timestamp (double/float)\ndf = df.withColumn('lastorder', F.unix_timestamp(F.col('lastorder')).cast(DoubleType()))"}}, "inputs": [{"name": "df", "node_id": "65a18e42-4e01-42b3-a976-fc5154237b8a", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "6d112fa8-c836-4c03-88da-2a10919fa902", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_formula_0.1", "parameters": {"output_column": "days_since_last_order", "formula": "datediff(current_timestamp(), from_unixtime(lastorder))"}, "inputs": [{"name": "df", "node_id": "26eb7ddc-2c6e-434a-be6c-ad8c2cedf40c", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "59f950a5-5fe7-4071-9d92-b3b53b86efa5", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_formula_0.1", "parameters": {"output_column": "tenure_days", "formula": "datediff(current_timestamp(), to_timestamp(created, 'yyyy-MM-dd'))"}, "inputs": [{"name": "df", "node_id": "6d112fa8-c836-4c03-88da-2a10919fa902", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "1c6e1a75-b781-4d50-be24-3b658171a873", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_formula_0.1", "parameters": {"output_column": "days_to_first_order", "formula": "datediff(to_timestamp(firstorder, 'yyyy-MM-dd'), to_timestamp(created, 'yyyy-MM-dd'))"}, "inputs": [{"name": "df", "node_id": "59f950a5-5fe7-4071-9d92-b3b53b86efa5", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "ce53fd60-db5c-432d-969c-f53dec3b2d41", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_formula_0.1", "parameters": {"output_column": "activity_span_days", "formula": "datediff(from_unixtime(lastorder), to_timestamp(firstorder, 'yyyy-MM-dd'))"}, "inputs": [{"name": "df", "node_id": "1c6e1a75-b781-4d50-be24-3b658171a873", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "218e94b3-d238-45f3-a543-45e3f15d606c", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_formula_0.1", "parameters": {"output_column": "email_engagement_score", "formula": "eopenrate * 0.3 + eclickrate * 0.7"}, "inputs": [{"name": "df", "node_id": "ce53fd60-db5c-432d-969c-f53dec3b2d41", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "629e02a6-dd65-4f2c-ba24-9e746f01184f", "type": "TRANSFORM", "operator": "sagemaker.spark.manage_columns_0.1", "parameters": {"operator": "Drop column", "drop_column_parameters": {"column_to_drop": ["created", "firstorder", "eclickrate", "eopenrate"]}}, "inputs": [{"name": "df", "node_id": "218e94b3-d238-45f3-a543-45e3f15d606c", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "7b292dd8-c533-4216-b48e-8a958e176d58", "type": "TRANSFORM", "operator": "sagemaker.spark.balance_data_0.1", "parameters": {"operator": "Random oversample", "ratio": 1, "smote_params": {"num_neighbors": 5}, "target_column": "retained"}, "inputs": [{"name": "df", "node_id": "629e02a6-dd65-4f2c-ba24-9e746f01184f", "output_name": "default"}], "outputs": [{"name": "default"}]}]}